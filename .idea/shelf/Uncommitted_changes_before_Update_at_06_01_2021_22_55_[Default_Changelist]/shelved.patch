Index: app/src/main/java/com/programmergabut/solatkuy/base/BaseFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.programmergabut.solatkuy.base\r\n\r\nimport android.Manifest\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.databinding.ViewDataBinding\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.*\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog\r\nimport com.programmergabut.solatkuy.R\r\nimport com.programmergabut.solatkuy.data.local.SolatKuyRoom\r\nimport com.programmergabut.solatkuy.databinding.LayoutErrorBottomsheetBinding\r\nimport com.programmergabut.solatkuy.util.SharedPrefUtil\r\nimport javax.inject.Inject\r\n\r\nabstract class BaseFragment<DB: ViewDataBinding, VM: ViewModel>(\r\n    private val layout: Int,\r\n    private val viewModelClass: Class<VM>?,\r\n    private val viewModelTest: VM?\r\n) : Fragment(), LifecycleObserver {\r\n\r\n    @Inject\r\n    lateinit var db: SolatKuyRoom\r\n    @Inject\r\n    lateinit var sharedPrefUtil: SharedPrefUtil\r\n    lateinit var viewModel: VM\r\n    protected lateinit var binding : DB\r\n\r\n    protected val LOCATION_PERMISSIONS = 101\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        \r\n        binding = DataBindingUtil.inflate(inflater, layout, container, false)\r\n        binding.lifecycleOwner = this\r\n\r\n        viewModelClass?.let {\r\n            viewModel = viewModelTest ?: ViewModelProvider(requireActivity()).get(it)\r\n        }\r\n\r\n        setListener()\r\n\r\n        return binding.root\r\n    }\r\n\r\n    protected open fun setListener(){\r\n\r\n    }\r\n\r\n    protected fun isLocationPermissionGranted(): Boolean {\r\n        return (ActivityCompat.checkSelfPermission(requireContext(), Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED &&\r\n                ActivityCompat.checkSelfPermission(requireContext(), Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED)\r\n    }\r\n\r\n    protected fun listLocationPermission(): Array<String> {\r\n        return arrayOf(Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION)\r\n    }\r\n\r\n    protected fun <T : Any> gotoIntent(classIntent : Class<T>, bundle : Bundle? = null, isFinish : Boolean = false){\r\n        val intent = Intent(this.activity, classIntent)\r\n        if(bundle != null)\r\n            intent.putExtras(bundle)\r\n        startActivity(intent)\r\n        if(isFinish)\r\n            activity?.finish()\r\n    }\r\n\r\n    protected fun showBottomSheet(title : String = resources.getString(R.string.text_error_title),\r\n                                  description : String = resources.getString(R.string.text_error_dsc),\r\n                                  isCancelable : Boolean = true, isFinish : Boolean = false) {\r\n\r\n        val dialogBinding: LayoutErrorBottomsheetBinding = DataBindingUtil.inflate(\r\n            layoutInflater, R.layout.layout_error_bottomsheet, null, true\r\n        )\r\n\r\n        val dialog =  BottomSheetDialog(requireContext())\r\n        dialog.window?.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT)\r\n        dialog.setCancelable(isCancelable)\r\n        dialog.setContentView(dialogBinding.root)\r\n        dialogBinding.tvTitle.text = title\r\n        dialogBinding.tvDesc.text = description\r\n        dialog.show()\r\n\r\n        dialogBinding.btnOk.setOnClickListener {\r\n            dialog.hide()\r\n\r\n            if(isFinish){\r\n                findNavController().popBackStack()\r\n            }\r\n        }\r\n    }\r\n\r\n    protected fun getDatabase() = db\r\n\r\n    protected fun getLastReadSurah(): Int {\r\n        return sharedPrefUtil.getLastReadSurah()\r\n    }\r\n\r\n    protected fun getIsHasOpenAnimation(): Boolean {\r\n        return sharedPrefUtil.getIsHasOpenAnimation()\r\n    }\r\n\r\n    protected fun insertLastReadSharedPref(selectedSurahId: Int, numberInSurah: Int) {\r\n        sharedPrefUtil.insertLastReadSharedPref(selectedSurahId, numberInSurah)\r\n    }\r\n\r\n    protected fun getLastReadAyah(): Int {\r\n        return sharedPrefUtil.getLastReadAyah()\r\n    }\r\n\r\n    protected fun getIsNotHasOpenAnimation(): Boolean {\r\n        return sharedPrefUtil.getIsHasOpenAnimation()\r\n    }\r\n\r\n    protected fun setIsHasOpenAnimation(value: Boolean){\r\n        sharedPrefUtil.setIsHasOpenAnimation(value)\r\n    }\r\n\r\n    protected fun getIsBrightnessActive(): Boolean {\r\n        return sharedPrefUtil.getIsBrightnessActive()\r\n    }\r\n\r\n    protected fun setIsBrightnessActive(value: Boolean){\r\n        sharedPrefUtil.setIsBrightnessActive(value)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/programmergabut/solatkuy/base/BaseFragment.kt	(revision ea31b4acd030c08fdf5c21d0a05478c3a4534ef1)
+++ app/src/main/java/com/programmergabut/solatkuy/base/BaseFragment.kt	(date 1609948374246)
@@ -41,7 +41,7 @@
         container: ViewGroup?,
         savedInstanceState: Bundle?
     ): View? {
-        
+
         binding = DataBindingUtil.inflate(inflater, layout, container, false)
         binding.lifecycleOwner = this
 
